====[DMF Module Documentation]=====================================================================================================

Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT license.

====[Module]=======================================================================================================================

DMF_CmApi

====[Module Category]==============================================================================================================

Driver Patterns

====[Module Summary]===============================================================================================================

Gives access to the CM_* API. This API gives access to device and device interface configuration information. Client registers for 
arrival/removal of instances of a given device interface GUID. The Client can then call Methods to obtain information about or
configure that instance.

====[Module Configuration]=========================================================================================================

typedef struct
{
    // Device Interface Guid.
    //
    GUID DeviceInterfaceGuid;
    // Callback to get device information.
    //
    EVT_DMF_CmApi_DeviceInterfaceList* CmApi_Callback_DeviceInterfaceList;
} DMF_CONFIG_CmApi;

DeviceInterfaceGuid:
This is the device interface GUID for which an arrival/removal notification is registered. 

CmApi_Callback_DeviceInterfaceList:
Client callback that executes when the Device Interface associated with DeviceInterfaceGuid arrives or is removed.

====[Module Enumeration Types]======================================================================================================

====[Module Structures]============================================================================================================

====[Module Callbacks]=============================================================================================================

_IRQL_requires_max_(PASSIVE_LEVEL)
_IRQL_requires_same_
VOID 
EVT_DMF_CmApi_DeviceInterfaceList(_In_ DMFMODULE DmfModule,
                                  _In_ WCHAR* DeviceInterfaceList,
                                  _In_ GUID DeviceInterfaceGuid);

This callback executes any time an instance of the given device interface appears or disappears.

Returns
-------
None

Parameters
----------
DmfModule:
An open DMF_CmApi Module handle.

DeviceInterfaceList: 
A string with a list of all the instances of a device interfaces of type DeviceInterfaceGuid.

DeviceInterfaceGuid:
The given device interface which was previously registered.

====[Module Methods]===============================================================================================================

_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
DMF_CmApi_DeviceInstanceIdAndHardwareIdsGet(
    _In_ DMFMODULE DmfModule,
    _In_ PWSTR DeviceInterface,
    _Out_ PWCHAR DeviceInstanceId,
    _In_ UINT32 DeviceInstanceIdSize,
    _Out_ PWCHAR DeviceHardwareIds,
    _In_ UINT32 DeviceHardwareIdsSize
    );

Given the Id of an instance of a given device interface, return the list of hardware ids accociated with
with that instance.

Returns
-------
NTSTATUS

Parameters
----------
DmfModule:
An open DMF_CmApi Module handle.

DeviceInterface:
The device interface GUID of the class of device to access.

DeviceInstanceId:
The id of the instance of DeviceInterface.

DeviceInterfaceIdSize:
The size in characters of DeviceInterfaceId.

DeviceHardwareIds:
The list of HWID (hardware identifier) associated with DeviceInstanceId.

DeviceHardwareIdsSize:
The size in characters of DeviceHardwareIds.

Remarks
-------

-----------------------------------------------------------------------------------------------------------------------------------

_IRQL_requires_max_(PASSIVE_LEVEL)
BOOLEAN
DMF_CmApi_DevNodeStatusAndProblemCodeGet(
    _In_ DMFMODULE DmfModule,
    _In_ WCHAR* DeviceInstanceId,
    _Out_ UINT32* DevNodeStatus,
    _Out_ UINT32* ProblemCode
    );

Given an instance of a device interface, get its Device Node Status and Problem Code.

Returns
-------
TRUE if the Problem Code and DevNode Status were read. FALSE, otherwise.

Parameters
----------
DmfModule:
An open DMF_CmApi Module handle.

DeviceInstanceId:
InstanceId string of the given instance.

DevNodeStatus:
Returned Status of the device node.

ProblemCode:
Returned Problem code for the device node.

Remarks
-------
    *

====[Module IOCTLs]================================================================================================================

====[Module Remarks]===============================================================================================================
    
    * This API should be used instead of the SETUPAPI as that library is deprecated. 

====[Module Children]==============================================================================================================

====[Module Implementation Details]================================================================================================

    * Most Methods from DMF_BufferPool are copied and renamed and routed to either the Producer or Consumer list in this Module
so that the Client can access the DMF_BufferPool information.

====[Examples]=====================================================================================================================

====[To Do]========================================================================================================================

    * Create another callback that is called per insstance. The Module will parse the list of instance ids on behalf of the 
Client.
    * Add other Methods that perform other actions that can be called by the Client from the callcack.

====[eof: DMF_CmApi]===============================================================================================================

